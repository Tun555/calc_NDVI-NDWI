from matplotlib import colors   
import numpy
import xarray 
class index():
    def __init__(self):
        print('Index class created ')
        pass
    @staticmethod
    def NDVI(DataArray):
        """
        calc NDVI (Normalized Difference vegetation Index)
        :param DataArray (Red bands,NIR bands):
        :return : NDVI array
        """
        DataArray = DataArray
        red = xarray.where(DataArray.sr_band4==-9999,numpy.nan,DataArray.sr_band4)
        nir = xarray.where(DataArray.sr_band5==-9999,numpy.nan,DataArray.sr_band5)
        ndvi1 = (nir-red)/(nir+red).to_numpy()
        ndvi3 = numpy.clip(ndvi1,-1,1)
        return index.NDVI_cmap()(ndvi3)
    @staticmethod
    def NDWI(DataArray):
        """
        calc NDWI (Normalized Difference Water Index)
        :param DataArray (SWIR bands,NIR bands):
        :return : NDMI array
        """
        DataArray = DataArray
        swir = xarray.where(DataArray.sr_band6==-9999,numpy.nan,DataArray.sr_band6)
        nir = xarray.where(DataArray.sr_band5==-9999,numpy.nan,DataArray.sr_band5)
        ndwi1 = (nir-swir)/(nir+swir).to_numpy()
        ndwi3 = numpy.clip(ndwi1,-1,1)
        return ndwi3
    @staticmethod
    def NDVI_cmap():
        """
        Leafwood colormap used for NDVI.
        :return: colormap.
        """
        #https://mycolor.space/gradient?ori=to+right+top&hex=%2385A938&hex2=%233C770E&sub=1
        #https://imagecolorpicker.com/en
        RGB1   = (0.30588235, 0.05490196, 0.05490196)             
        RGB2   = (0.39215686, 0.09803922, 0.07843137)   
        RGB3   = (0.43921569, 0.18431373, 0.00392157)   
        RGB4   = (0.50980392, 0.23529412, 0.05098039)   
        RGB5   = (0.54901961, 0.2745098 , 0.05882353)   
        RGB6   = (0.61960784, 0.30588235, 0.02745098)   
        RGB7   = (0.70980392, 0.40784314, 0.0627451 )   
        RGB8   = (0.79607843, 0.49019608, 0.16470588)   
        RGB9   = (0.85490196, 0.58823529, 0.04705882)  
        RGB10  = (0.85882353, 0.63529412, 0.05490196)   
        RGB11  = (0.88235294, 0.7254902 , 0.01568627)   
        RGB12  = (0.87058824, 0.8       , 0.05098039)   
        RGB13  = (0.89019608, 0.8745098 , 0.07058824)   
        RGB14  = (0.92156863, 0.91764706, 0.09019608)   
        RGB15  = (0.81176471, 0.85882353, 0.2745098 )   
        RGB16  = (0.68627451, 0.77647059, 0.26666667)   
        RGB17  = (0.56078431, 0.69803922, 0.25882353)   
        RGB18  = (0.52156863, 0.6627451 , 0.21960784)   
        RGB19  = (0.38039216, 0.56470588, 0.14117647)   
        RGB20  = (0.23529412, 0.46666667, 0.05490196)   
        RGB21  = (0.16078431, 0.36862745, 0.04313725)   
        cdict = {
            'red':  ((1  / 20 * 0,  (RGB1[0])  ,(RGB1[0])),
                    (1  / 20 * 1,  (RGB2[0])  ,(RGB2[0])),
                    (1  / 20 * 2,  (RGB3[0])  ,(RGB3[0])),
                    (1  / 20 * 3,  (RGB4[0])  ,(RGB4[0])),
                    (1  / 20 * 4,  (RGB5[0])  ,(RGB5[0])),
                    (1  / 20 * 5,  (RGB6[0])  ,(RGB6[0])),
                    (1  / 20 * 6,  (RGB7[0])  ,(RGB7[0])),
                    (1  / 20 * 7,  (RGB8[0])  ,(RGB8[0])),
                    (1  / 20 * 8,  (RGB9[0])  ,(RGB9[0])),
                    (1  / 20 * 9,  (RGB10[0])  ,(RGB10[0])),
                    (1  / 20 * 10, (RGB11[0])  ,(RGB11[0])),
                    (1  / 20 * 11, (RGB12[0])  ,(RGB12[0])),
                    (1  / 20 * 12, (RGB13[0])  ,(RGB13[0])),
                    (1  / 20 * 13, (RGB14[0])  ,(RGB14[0])),
                    (1  / 20 * 14, (RGB15[0])  ,(RGB15[0])),
                    (1  / 20 * 15, (RGB16[0])  ,(RGB16[0])),
                    (1  / 20 * 16, (RGB17[0])  ,(RGB17[0])),
                    (1  / 20 * 17, (RGB18[0])  ,(RGB18[0])),
                    (1  / 20 * 18, (RGB19[0])  ,(RGB19[0])),
                    (1  / 20 * 19, (RGB20[0])  ,(RGB20[0])),
                    (1  / 20 * 20, (RGB21[0])  ,(RGB21[0]))),
            'green':((1  / 20 * 0,  (RGB1[1])  ,(RGB1[1])),
                    (1  / 20 * 1,  (RGB2[1])  ,(RGB2[1])),
                    (1  / 20 * 2,  (RGB3[1])  ,(RGB3[1])),
                    (1  / 20 * 3,  (RGB4[1])  ,(RGB4[1])),
                    (1  / 20 * 4,  (RGB5[1])  ,(RGB5[1])),
                    (1  / 20 * 5,  (RGB6[1])  ,(RGB6[1])),
                    (1  / 20 * 6,  (RGB7[1])  ,(RGB7[1])),
                    (1  / 20 * 7,  (RGB8[1])  ,(RGB8[1])),
                    (1  / 20 * 8,  (RGB9[1])  ,(RGB9[1])),
                    (1  / 20 * 9,  (RGB10[1])  ,(RGB10[1])),
                    (1  / 20 * 10, (RGB11[1])  ,(RGB11[1])),
                    (1  / 20 * 11, (RGB12[1])  ,(RGB12[1])),
                    (1  / 20 * 12, (RGB13[1])  ,(RGB13[1])),
                    (1  / 20 * 13, (RGB14[1])  ,(RGB14[1])),
                    (1  / 20 * 14, (RGB15[1])  ,(RGB15[1])),
                    (1  / 20 * 15, (RGB16[1])  ,(RGB16[1])),
                    (1  / 20 * 16, (RGB17[1])  ,(RGB17[1])),
                    (1  / 20 * 17, (RGB18[1])  ,(RGB18[1])),
                    (1  / 20 * 18, (RGB19[1])  ,(RGB19[1])),
                    (1  / 20 * 19, (RGB20[1])  ,(RGB20[1])),
                    (1  / 20 * 20, (RGB21[1])  ,(RGB21[1]))),
            'blue': ((1  / 20 * 0,  (RGB1[2])  ,(RGB1[2])),
                    (1  / 20 * 1,  (RGB2[2])  ,(RGB2[2])),
                    (1  / 20 * 2,  (RGB3[2])  ,(RGB3[2])),
                    (1  / 20 * 3,  (RGB4[2])  ,(RGB4[2])),
                    (1  / 20 * 4,  (RGB5[2])  ,(RGB5[2])),
                    (1  / 20 * 5,  (RGB6[2])  ,(RGB6[2])),
                    (1  / 20 * 6,  (RGB7[2])  ,(RGB7[2])),
                    (1  / 20 * 7,  (RGB8[2])  ,(RGB8[2])),
                    (1  / 20 * 8,  (RGB9[2])  ,(RGB9[2])),
                    (1  / 20 * 9,  (RGB10[2])  ,(RGB10[2])),
                    (1  / 20 * 10, (RGB11[2])  ,(RGB11[2])),
                    (1  / 20 * 11, (RGB12[2])  ,(RGB12[2])),
                    (1  / 20 * 12, (RGB13[2])  ,(RGB13[2])),
                    (1  / 20 * 13, (RGB14[2])  ,(RGB14[2])),
                    (1  / 20 * 14, (RGB15[2])  ,(RGB15[2])),
                    (1  / 20 * 15, (RGB16[2])  ,(RGB16[2])),
                    (1  / 20 * 16, (RGB17[2])  ,(RGB17[2])),
                    (1  / 20 * 17, (RGB18[2])  ,(RGB18[2])),
                    (1  / 20 * 18, (RGB19[2])  ,(RGB19[2])),
                    (1  / 20 * 19, (RGB20[2])  ,(RGB20[2])),
                    (1  / 20 * 20, (RGB21[2])  ,(RGB21[2])),
            )
        }
        nc4 = colors.LinearSegmentedColormap('leafwood',segmentdata=cdict)
        return nc4
